@inject Services.IActionLoader actions;
@inject Services.ISettingsLoader sl;

@code{
    [Parameter] public Action Return { get; set; } = (() => { });
    [Parameter] public State.Land? Land { get; set; }
    [Parameter] public State.Player? Player { get; set; }
    Models.CmdRecruit model = new Models.CmdRecruit();
    protected override void OnInitialized()
    {
        model.Soldiers = (int)Player!.Money;
    }
    uint Missing => (uint)Math.Max(0, model.Soldiers - Player!.Money);
    void DoRecruit()
    {
        if (model.Borrow && Missing > 0)
        {
            actions.Add(new Dynamics.Commands.Loan(Player!.Id, Missing, sl.Settings));
        }
        if (actions.Add(new Dynamics.Commands.Recruitment(Player!.Id, Land!.Id, new State.PlayerArmy(Player!, (uint)model.Soldiers))))
        {
            Return();
        }
    }
}
<EditForm Model="@model" OnValidSubmit="DoRecruit">
    <DataAnnotationsValidator/><ValidationSummary/>
    <label>
        @Land!.Name má @(Land!.Soldiers)@Sym.Soldiers. Kolik chcete naverbovat?<br/>
        <InputNumber @bind-Value="model.Soldiers" min="1" autofocus/><br/>
    </label>
    @if (Missing > 0)
    {
        <label>
            Chybí ti @(Missing)@Sym.Money<br/>
            Verbovat na dluh: <InputCheckbox @bind-Value="model.Borrow"/><br/>
        </label>
    }
    else
    {
        model.Borrow = false;
    }
    <button type="submit">Verbovat</button>
</EditForm>